import os
import hashlib
import subprocess

# Directory where suspicious files are located
suspicious_files_dir = "path/to/suspicious_files"

def calculate_md5(file_path):
    """Calculate MD5 hash of a file."""
    md5_hash = hashlib.md5()
    with open(file_path, "rb") as f:
        for chunk in iter(lambda: f.read(4096), b""):
            md5_hash.update(chunk)
    return md5_hash.hexdigest()

def analyze_file(file_path):
    """Analyze a suspicious file using antivirus software or other tools."""
    # Replace the command below with the appropriate command for your antivirus or analysis tool
    analysis_command = ["antivirus_command", file_path]

    try:
        result = subprocess.run(analysis_command, capture_output=True, text=True, check=True)
        return result.stdout.strip()
    except subprocess.CalledProcessError as e:
        return f"Error: {e.stderr}"

def main():
    # Get a list of suspicious files in the directory
    suspicious_files = os.listdir(suspicious_files_dir)

    for file in suspicious_files:
        file_path = os.path.join(suspicious_files_dir, file)

        # Calculate the MD5 hash of the file for future reference
        md5_hash = calculate_md5(file_path)
        print(f"Analyzing {file} (MD5 hash: {md5_hash})...")

        # Perform the analysis on the file
        analysis_result = analyze_file(file_path)

        # Print the analysis result
        print(f"Analysis result for {file}:")
        print(analysis_result)
        print("=" * 40)

if __name__ == "__main__":
    main()

