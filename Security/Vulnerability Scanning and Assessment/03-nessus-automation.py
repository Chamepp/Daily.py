import requests
import json

# Nessus API endpoint and credentials
url = 'https://nessus.example.com'
access_key = 'your_access_key'
secret_key = 'your_secret_key'

# Target host for vulnerability scanning
target_host = '192.168.1.100'

# Create a new scan using the Nessus API
def create_scan():
    headers = {
        'X-ApiKeys': f'accessKey={access_key}; secretKey={secret_key}',
        'Content-Type': 'application/json'
    }

    payload = {
        'uuid': 'your_template_uuid',
        'settings': {
            'name': 'My Scan',
            'text_targets': target_host
        }
    }

    response = requests.post(f'{url}/scans', headers=headers, data=json.dumps(payload))

    if response.status_code == 200:
        scan_id = response.json()['scan']['id']
        print(f'Scan created successfully. Scan ID: {scan_id}')
        return scan_id
    else:
        print(f'Failed to create scan. Status code: {response.status_code}')
        return None

# Launch the created scan
def launch_scan(scan_id):
    headers = {
        'X-ApiKeys': f'accessKey={access_key}; secretKey={secret_key}',
        'Content-Type': 'application/json'
    }

    payload = {
        'scan_id': scan_id
    }

    response = requests.post(f'{url}/scans/{scan_id}/launch', headers=headers, data=json.dumps(payload))

    if response.status_code == 200:
        print('Scan launched successfully.')
    else:
        print(f'Failed to launch scan. Status code: {response.status_code}')

# Main function
def main():
    scan_id = create_scan()

    if scan_id:
        launch_scan(scan_id)

if __name__ == '__main__':
    main()

