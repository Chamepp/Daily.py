import hashlib
import os
import csv
import datetime

def calculate_file_hash(file_path):
    """Calculate the SHA256 hash of a file."""
    hasher = hashlib.sha256()
    with open(file_path, 'rb') as file:
        while True:
            chunk = file.read(4096)
            if not chunk:
                break
            hasher.update(chunk)
    return hasher.hexdigest()

def monitor_directory(directory_path, log_file_path):
    """Monitor a directory for file changes and log them to a CSV file."""
    with open(log_file_path, 'a', newline='') as log_file:
        writer = csv.writer(log_file)
        
        # Check if the log file is empty
        is_log_empty = os.stat(log_file_path).st_size == 0
        if is_log_empty:
            writer.writerow(['Timestamp', 'File Path', 'Action', 'Hash Value'])

        for root, _, files in os.walk(directory_path):
            for file in files:
                file_path = os.path.join(root, file)
                hash_value = calculate_file_hash(file_path)
                
                # Check if the file is already logged
                with open(log_file_path, 'r') as log_file_read:
                    reader = csv.reader(log_file_read)
                    for row in reader:
                        if len(row) > 1 and row[1] == file_path:
                            if row[3] != hash_value:
                                writer.writerow([datetime.datetime.now(), file_path, 'Modified', hash_value])
                            break
                    else:
                        writer.writerow([datetime.datetime.now(), file_path, 'Added', hash_value])

def main():
    directory_path = 'path/to/monitor'  # Replace with the directory you want to monitor
    log_file_path = 'path/to/log.csv'  # Replace with the path to the log file

    # Start monitoring the directory
    monitor_directory(directory_path, log_file_path)

if __name__ == '__main__':
    main()

